continue
exit
interventions
continue
params
continue
params
continue
params
@chart
@chart.new_record?
@chart.valid?
continue
session[:chart_params]
@chart.valid?
session[:chart_step]
session
continue
parse_session[:interventions].each_with_index{|v,k| puts v.deep_merge!({"index" => (k)})}
parse_session[:interventions].each_with_index{|v,k| puts v}
parse_session[:interventions].each_with_index{|k,v| puts v}
parse_session[:interventions].each_with_index{|k,v| puts k}
parse_session[:interventions].each_with_index{|(k,v),i| puts k}
parse_session[:interventions].each_with_index{|(k,v),i| puts v}
parse_session[:interventions].each{|(k,v),i| puts v}
parse_session[:interventions].each{|(k,v),i| puts i}
parse_session[:interventions].each{|(k,v),i| puts k}
parse_session[:interventions]
session[:intervention_params]
session[:interventions_params]
parse_session
continue
Base64.encode64(image.first.to_blob)
Base64.encode64(png)
png
svg
Base64.encode(png)
Base.64.encode(png)
image.first.to_blob
image
continue
format
continue
format
continue
img.first.write "example_out.png"
img.first.write
img.first.class
img.class
img.write
ls img
img
continue
img
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
params[:blob]
exit
continue
exit
interventions[0]["type"]
interventions
continue
@interventions_size
continue
params[:id]
session[:intervention_params]
session[:intervention_params][params[:id].to_i]
continue
params[:edit_intervention]['title']
session[:intervention_params][params[:id].to_i]["title"]
session[:intervention_params][params[:id].to_i]
session[:intervention_params][params[:id]]
session[:intervention_params]
params
continue
d3_session_data
exit
intervention_params[@index].deep_merge!({"id" => SecureRandom.hex})
intervention_params[@index]
intervention_params[@index].deep_merge({"id" => SecureRandom.hex})
SecureRandom.hex
intervention_params[@index]
intervention_params
exit
session[:intervention_params]
continue
session[:intervention_params]
continue
session[:intervention_params]
exit
params[:edit_intervention]
session[:intervention_params][params[:id].to_i]["type"] = "test"
session[:intervention_params][params[:id].to_i]["type"]
session[:intervention_params][params[:id].to_i]
session[:intervention_params]
exit
session[:intervention_params]
session[:interventions_params]
params[:intervention_params]
params[:interventions_params]
params[:id]
params[:edit_intervention]
continue
d3_session_data
continue
@index
continue
d3_session_data
continue
@index
continue
@index
continue
session[:intervention_params].flatten
session[:intervention_params]
continue
session[:intervention_params]
session[:interventions_params]
session[interventions_params]
session
continue
session[:intervention_params].deep_merge!(intervention_params).to_a
continue
session[:intervention_params].deep_merge!(intervention_params) if intervention_params
session[:intervention_params]
continue
session[:intervention_params]
continue
exit
session[:entry_params].each{|k,v| v.each{|key,value| puts value.empty?}}
session[:entry_params].each{|k,v| v.each{|key,value| puts value.nil?}}
session[:entry_params].each{|k,v| v.each{|key,value| puts value}}
session[:entry_params].each{|k,v| puts v}
session[:entry_params]
continue
session[:entry_params]
continue
session[:entry_params]
continue
session[:entry_params]
continue
session[:entry_params]
continue
session[:entry_params]["date"].delete("1")
session[:entry_params]["date"].delete("10")
session[:entry_params]["date"].delete("1")
"#{params[:id].to_i+1}"
session[:entry_params]
continue
session[:entry_params]["date"]
session[:entry_params]["date"].delete("1")
session[:entry_params]["date"]
session[:entry_params].map{|h| h.delete("#{params[:id].to_i+1}") }
session[:entry_params]
session[:entry_params].each{|h| h.delete("#{params[:id].to_i+1}") }
session[:entry_params]
continue
session[:entry_params]["date"].delete("1")
session[:entry_params]["date"].delete(1)
session[:entry_params].each{|key, value| puts value.delete(params[:id].to_i+1) }
session[:entry_params].each{|key, value| puts value }
session[:entry_params].each{|key, value| puts v }
session[:entry_params].each{|h| puts h }
session[:entry_params].each{|h| h.delete(params[:id].to_i+1) }
session[:entry_params]
continue
session[:entry_params]
params[:id].to_i+1
continue
params[:id]+1
params[:id]
continue
exit
next
continue
next
continue
step
v.to_time.strftime("%b %Y")
continue
v.to_time.strftime("%b %Y")
continue
v.to_time.strftime("%b %Y")
v.to_time
i
v
exit
!interventions.empty?
interventions.empty?
interventions
continue
interventions
continue
exit
xit
@chart.interventions.map{|i| i.start}
@chart.interventions.map{|i| i}
@chart.entries.map{|i| puts i}
@chart.interventions.map{|i| puts i}
@chart.interventions
continue
params
continue
params
intervention_params
continue
session[:intervention_params]
continue
all_entries
continue
j
continue
@chart.entries.first.to_json
@chart.entries.first.created_at.class
@chart.entries.first.date.class
@chart.entries
j
continue
step
Entry.first
exit
@chart.entries.map{|i| i.date.strftime("%b %Y")}exit
@chart.entries.map{|i| i.date.strftime("%b %Y")}
@chart.entries.each{|i| i.date.strftime("%b %Y")}
j
exit
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_time.strftime("%b %Y"), value: s["hdl"]["#{i}"].to_i})}
a = Array.new
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_time.strftime("%b"), value: s["hdl"]["#{i}"].to_i})}
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_datetime, value: s["hdl"]["#{i}"].to_i})}
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_datetime("%b"), value: s["hdl"]["#{i}"].to_i})}
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_strftime("%b"), value: s["hdl"]["#{i}"].to_i})}
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_datetime("%b"), value: s["hdl"]["#{i}"].to_i})}
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_datetime, value: s["hdl"]["#{i}"].to_i})}
a = Array.new
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i}, {symbol: "HDL", date: v.to_datetime, value: s["hdl"]["#{i}"].to_i})}
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v.to_datetime, value: s["ldl"]["#{i}"].to_i})}
a
s["date"].each{|i,v| a.push({symbol: "LDL", date: v, value: s["ldl"]["#{i}"].to_i})}
a
