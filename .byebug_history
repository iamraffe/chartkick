exit
organized_data
exit
ext
organized_data
organized_data["ldl"]["blue"] = "red"
organized_data
exit
organized_data["ldl"].flatten(1)
organized_data.flatten(1)
organized_data.flatten!
organized_data.flatten
organized_data
exit
organized_data
organized_data["ldl"] = {entry.date.to_s => entry.ldl}
organized_data["ldl"] = :entry.date.to_s => entry.ldl
organized_data["ldl"] = entry.date.to_s => entry.ldl
organized_data
organized_data["ldl"] = entry.ldl
organized_data
organized_data["ldl"][entry.date.to_s] = entry.ldl.to_s
organized_data
organized_data["ldl"][entry.date.to_s] = entry.ldl
entry.ldl
entry.date
entry
organized_data
exit
organized_data
organized_data = Hash.new("ldl" => Hash.new, "hdl" => Hash.new, "triglycerides" => Hash.new)
organized_data
organized_data["ldl"][exi] = "azul"
organized_data = Hash.new("ldl" => Hash.new, "hdl" => Hash.new, "triglycerides" => Hash.new)
organized_data = Hash.new
organized_data
exit
chart_data
exit
organized_data.each_with_index{|entry, k| puts entry }
organized_data.each_with_index{|k, entry| puts entry }
organized_data.each{|k, entry| puts entry }
organized_data.each{|k, entry| puts k }
organized_data.each do |entry|
organized_data
exit
organized_data.map(&:to_a).flatten(1).group_by{|x| x[:name]}
organized_data.map(&:to_a).flatten(1)
organized_data.map(&:to_a).flatten(1).reduce({})
organized_data
organized_data.group_by{|x| x[0][:name]}
organized_data.group_by{|x| x[][:name]}
organized_data.group_by{|x| x[:name]}
organized_data
exit
organized_data
organized_data.deep_merge
organized_data.deep_merge!
organized_data.flatten!
organized_data
chart_data.deep_merge!(organized_data)
chart_data
organized_data
exit
 [{name: "LDL", data: {entry.date => entry.ldl}},{name: "HDL", data: {entry.date => entry.hdl}},{name: "TRIGLYCERIDS", data: {entry.date => entry.triglycerides}}]
organized_data
exit
entries["date"]["0"]
entries["date"][0]
entries["date"]
entries["date]
entries
chart
exit
Entry.all
data.date
data.first
data.count
data
exit
data["date"]["0"]
data["date"][0]
data["date"]
data[date]
data[:date]
data
exit
params[:entry][:date][0]
params[:entry][:date]
 params[:entry]
exit
params
exit
@chart.next_step
@chart.current_step
@chart.current_step = session[:chart_step] unless session[:chart_step].nil?
'h' if session[:chart_step].nil?
'h' unless session[:chart_step].nil?
unless session[:chart_step].nil?
unlexx session[:chart_step].nil?
session[:chart_step].nil?
session[:chart_step]
session[:chart_step]]
@chart.current_step
@chart
exit
current_step
exit
session[:chart_step]
@chart.current_step
exit
@chart.current_step
session[:chart_step]
 @chart = Cholesterol.new(session[:chart_params])
exit
session[:chart_step]
session = [:chart_step]
@chart.current_step = session[:chart_step]
@chart = Cholesterol.new(session[:chart_params])
@chart
session[:chart_params]
chart_params
exit
@chart.current_step
@chart
